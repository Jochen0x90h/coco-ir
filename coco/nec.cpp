#include "nec.hpp"
#include "irTools.hpp"


namespace coco {
namespace nec {

/*
    Examples
    NÃ¤ve Light remote control
    0: 0,181,88,12,32,12,10,12,10,12,10,12,10,12,9,12,32,12,9,12,9,12,32,12,9,12,32,12,10,12,32,12,32,12,32,12,9,12,10,12,32,12,9,12,32,12,9,12,9,12,9,12,32,12,32,12,9,12,32,12,10,12,32,12,32,12,32,12
    1: 0,181,88,12,32,12,10,12,10,12,10,12,10,12,10,12,32,12,10,12,10,12,32,12,10,12,32,12,10,12,32,12,32,12,32,12,32,12,10,12,32,12,10,12,32,12,10,12,10,12,10,12,10,12,32,12,10,12,32,12,10,12,32,12,32,12,32,12
    Star: 0,181,88,12,32,12,10,12,10,12,10,12,10,12,10,12,32,12,10,12,10,12,32,12,10,12,32,12,10,12,32,12,32,12,32,12,10,12,10,12,10,12,32,12,10,12,10,12,32,12,10,12,32,12,32,12,32,12,10,12,32,12,32,12,10,12,32,12
    +: 0,181,88,12,32,12,10,12,10,12,10,12,10,12,10,12,32,12,10,12,10,12,32,12,9,12,32,12,10,12,32,12,32,12,32,12,10,12,32,12,10,12,9,12,32,12,9,12,10,12,10,12,32,12,10,12,32,12,32,12,10,12,32,12,32,12,32,12
    -: 0,181,88,12,32,12,10,12,10,12,9,12,10,12,9,12,32,12,9,12,9,12,32,12,10,12,32,12,9,12,32,12,32,12,32,12,32,12,32,12,9,12,9,12,32,12,9,12,10,12,10,12,9,12,10,12,32,12,32,12,9,12,32,12,32,12,32,12
*/

bool decode(Array<const uint8_t> times, Packet &packet) {
    // check size
    if (times.size() < 1 + 2 + 2 * 32)
        return false;

    // leader
    if (!checkLeader(times.data(), 9000us, 4500us))
        return false;

    // data
    uint8_t data[4];
    if (!decodeVariableLength(times.data() + 3, 562us, 563us, 1688us, data, 32))
        return false;

    // check if last byte is inverse of command
    if ((data[2] ^ data[3]) != 0xff)
        return false;

    packet.address1 = data[0];
    packet.address2 = data[1];
    packet.command = data[2];
    return true;
}

} // namespace nec
} // namespace coco
